<template>
    <div class="em_dialogs"  v-dialogDrag="true">
      <el-dialog title="设置窗口" :visible.sync="dialogFormVisible" :modal-append-to-body="false" :show-close="true">
        <el-row>
          <el-form :model="form">
              <template v-for="item in this.label">
                <el-col :span="24"  v-if="fn=='modify'">
                  <el-form-item :label="item.name" :label-width="formLabelWidth" >
                    <component :is="item.type"   :operation="item" ref="form_data"></component>
                  </el-form-item>
                </el-col>
                  <el-col :span="24"  v-if="fn=='add'">
                    <el-form-item :label="item.name" :label-width="formLabelWidth" v-show="item.add_show">
                          <component :is="item.type" :operation="item" ref="form_data"></component>
                    </el-form-item>
                  </el-col>
              </template>
          </el-form>
        </el-row>
        <div slot="footer" class="dialog-footer">
          <el-button @click="cancel">取 消</el-button>
          <el-button type="primary" @click="confirm">确 定</el-button>
        </div>
      </el-dialog>
    </div>
</template>

<script>
  import em_input from "@/components/em_input/em_input"
  import em_select from "@/components/em_select/em_select"
  import em_selectUrl from "@/components/em_selectUrl/em_selectUrl"
    export default {
        props: {
          label:{
             type:Array
          }
        },
       components:{
         em_input,
         em_select,
         em_selectUrl
       },
        data(){
           return{
             dialogFormVisible:false,
             form: {
             },
             formLabelWidth: '100px',
             alter_obj:"",
             fn:""
           }

        },
      created(){
          this.bus.$on("alter",res=>{
             this.alter_obj=res;         //将要修改的对象从sole_table传到此组件的alter_obj
            console.log(this.alter_obj)
          });
          this.bus.$on("alter_password",()=>{
               this.showdialog();
          })
      },
      methods:{
          showdialog(obj){
            this.fn=obj.fn;                  //判断点击的是添加还是修改按钮，复制给fn；
            console.log(this.alter_obj);
            if(this.fn=="add"){
              //this.$refs.form_data[0] = 1
              this.dialogFormVisible = true;
              this.label.forEach((val)=>{
                this.form[val.params]=""
              });
            }
            else{
                if(this.alter_obj!=""){
                  this.dialogFormVisible = true;
                  this.label.forEach((val)=>{
                    this.form[val.params]=this.alter_obj[val.params];
                  });

                }
            }
             console.log(this.form);
            setTimeout(() => {
              console.log(this.$refs.form_data);

            }, 0)




          },
         confirm(){
           this.dialogFormVisible = false;
           console.log(this.label);
           this.label.forEach((val,i)=>{
             console.log(i);
              console.log(this.$refs.form_data);
             console.log(this.$refs.form_data[i]);
             if(this.$refs.form_data[i].input){
               this.form[val.params]=this.$refs.form_data[i].input;
             }
             if(this.$refs.form_data[i].value){
               this.form[val.params]=this.$refs.form_data[i].value
             }
           });
           console.log(this.form);
           this.$emit("eventFromDialog",this.form);
         },
         cancel(){
           this.dialogFormVisible =false;
         }

      }
    };
</script>
<style lang="scss" scoped>
@import "em_dialogs";
</style>
